Constraints:
-Rule/condition which is applied while creating a table.
-It is not mandatory(but highly recommended)
-Used to restrict the data that are entering into table.
-Here, constraints are applied in column level.
Note:-
-Null means empty space.
-Inside the cell, if we see an empty space, it will be considered as null.
Types of constraints:
1)not null
2)unique
3)Primary key
4)Foreign key
5)check
6)default

1/-not null: Used to avoid null values.
-While inserting the data into the column user must and should pass the values.(it wont take any null values)

2/-unique: It avoids duplicate values.
-User can not insert/store same values into that particular column.
-Unique can take more than one null values on oracle 10g but not on MySQL.(MySQL DB allows only one value for unique column).
		  
3/-Primary Key: Combination of unique and not null.
-For one table we can have only one primary key, more than one primary key is not allowed by the server.
-Used for unique identification of each record.(***)
-Primary Key is not mandatory but highly recommended.
ex: rollno number(4) primary key

4/-Foreign key: Used to build a relation from one table to another table.(to establish some parent-child relation)
-In a table we can have more than one foreign key.
-Foreign Key is also known as referential-integrity constraints.
-Foreign key allows duplicates and null values.
-Primary key of the parent table should be the foreign key in child table.
ex: tid, hid are the foreign key
				
5/-Check:Used to restrict the data that is entering into the table-column.
-It is like a rule given to the particular column, if the rule or given condition is satisfied it allows the data to be stored else it rejects.
ex: phono number(10) check (length(phno)=10)

6/-Default: Used to store the default value for a given column.
ex: Branch varchar2(10) default "MECH"

Create a copy of table.
Syntax:
Create table table-name as select statement;
ex: create table emp1 as select * from emp;

DML(Data Manipulation Language):
-Used to manage and manipulate the data inside the database.
-DML is not directly connecteed to database, so the changes are not permanent.
-DML commands are not auto-commited.
-To make the changes permanent to database we should use TCL.

1)insert: Used to insert the values into the table.
Syntax: 1(if you want store all the values into all the columns for particular row)
insert into table-name values (value1, value2, value3.....);
ex:insert into product1 values (1,'car',1200,12-sep-2022);

syntax2:(if you want to store the values for particular column use syntax2)
insert into table-name (col1, col2, col3.....) values (value1, value2, value3.....) ;
ex: insert into product1 (pid,pname) values(1,bus);

TCL:Used to control the transaction done by the DML statement.
-TCL are applicable only for DML statement.

commit: used to save the data permanently into the database.
syntax: commit;

DQL: Data Query Language
-Used to retreive the data from the Database.
-select : Used to retreive/select the data from the table/database and to display it.
-The returned rows may be set of rows stored in a table called result table or result set.
-To retreive the data we have three different ways:
1)projection
2)selection
3)joins

																	
Projection: Used to retreive the data just by selecting the column is known as projection.
syntax: select */distinct column-name expression/aliasing
        from table-name;
order of execution: 1)from
					2)select
note: * selects all the column, once the column is selcted by default values get selcted.
-If user gives the table-name which is not present in the database, then user gets an error(table/view dosen't exist,)
-If user gives the col-name which is not present in the table, then user gets an error as invalid-identifier.
-Query: its a request sent to database to fetch the required data.

Q1)WAQTD details of employee.
ans- select * from emp;
Q2)WAQTD details of department.
ans- select * from dept;
Q3)WAQTD salgrade details.
ans- select * from salgrade;

Distinct: Used to remove the duplicate in specified column or in table.
-We can include more than one column in one distinct keyword/clause.
-We cannot have more than one distinct in one select statement.
-If the user has a requirement of using distinct, always the distinct should be the 1st argument after the select clause.

Q4)WAQTD employee name and salary of all the employee.
ans- select ename,sal from emp;
Q5)WAQTD employee name, salary, mgr, comm and deptno of all employee.
ans- select ename,sal,mgr,comm,deptno from emp;
Q6)WAQTD unique jobs.
ans- select distinct job from emp;
Q7)WAQTD unique deptno.
ans- select distinct deptno from emp;
Q8)WAQTD unique job, deptno of employee.
ans- select distinct job,deptno from emp;

Expression/aliasing:
Expression: Combination of operand and operator.

Aliasing: Used to rename the column-name.
-Aliasing can be done in 3 ways.
		1)using as keyword
		2)using space( )
		3)using double quote("")
1)old-column-name as aliasing-name
2)old-col-name aliasing-name
2)old-column-name "aliasing-name" (if you want space inside single column use the 3rd way(""))

Q9)WAQTD all the details of employee along with annualsal.
ans- select emp.*,sal*12 as annualsal from emp;
Q10)WAQTD all the details of employee along with their half term salary and anual salary.
ans- select emp.*,sal*6 "HALF TERM SAL",sal*12 "ANUAL SAL" from emp;
Q11)WAQTD empno as eid, sal as salary and deptno as dno.
ans- select empno eid,sal as salary,deptno "DNO" from emp;
														
Selection: Used to retreive the data by selecting nth columns and rows is known as selection.
syntax- select */distinct column-name expression/aliasing
		from table-name
		where <condition>;

Order of execution: from
					where
					select

Note: Where clause: used to filter the records inside the table.
-Where clause executes row by row process.
-we can write n number of conditon inside the where clause.
-We cannot write more than one where clause in one select statement.
-Where clause is implimented on rows.

**- If the condition is not satisfied in any of the row, we get the output as no rows selected.(If the given condition are false)
-In the selection, select is dependent on the where clause.(filtered rows)

Q1)WAQTD details of MARTIN.
ans- select * from emp where ename='MARTIN';
o/p- (1)no of rows
Q2)WAQTD details of employee who works as CLERK.
ans- select * from emp where job='CLERK';
o/p- (4)no of rows
Q3)WAQTD details of employee who are earning 3000.
ans- select * from emp where sal=3000;
o/p- (2)no of rows
Q4)WAQTD ename and deptno, if the employee works in deptno 30.
ans- select ename,deptno from emp where deptno=30;
o/p- (6)no of rows
Q5)WAQTD ename and hiredate, if employee hired on '03-DEC-81'.
ans- select ename, hiredate from emp where hiredate='03-DEC-81';
o/p- (2)no of rows
Q6)WAQTD employee name, salary and mgr, if employee reporting manager number is 7839.
ans- select ename,sal,mgr from emp where mgr=7839;
o/p- (3)no of rows 
Q7)WAQTD details of employee who earns commision more than 400.
ans- select * from emp where comm>400;
o/p- (2)no of rows
Q8)WAQTD details of employee, if employee number is 7902.
ans- select * from emp where empno=7902;
o/p- (1)no of rows
Q9)WAQTD details of employee along with annualsal, if annualsal is 36000.
ans- select emp.*,sal*12 as annualsal from emp where sal*12=36000;
o/p- (2)no of rows
Q10)WAQTD details of employee along with halfterm salary, if halfterm salary of employee is 40000.
ans- select emp.*,sal*6 as halfterm from emp where sal*6=40000;
o/p- (0)no of rows	


OPERATORS:
-Operator is uesd to perform operation between operands.
Types of Operators:
1)Arithmatic operator:(+,-,*,/)
2)Relational/Comparision operator:(>,<,>=,<=,!=(<>))
3)Special operator: is,is not,in,not in,like,not like,between,not between.

1)Arithmatic operator:
----------------------
-Used to perform arithmatic operation between the operand.

Q1)WAQTD employee name,sal and also display the salary after 10% hike.
Q2)WAQTD employee name,sal and also display the salary after 20% deduction.
Q3)WAQTD employee name,sal and also display the salary after 10% hike,also display their names if and only if the hiked salary is more than 20000.

Relational operator: 
--------------------
-Used to compare the given operands.(<,>,<=,>=,!=(<>))
Q1)WAQTD employee details, if employee earn more than 3000.
Q2)WAQTD employee details, if employee earn less than 1000.
Q3)WAQTD employee details, except who are working in deptno 10.
Q4)WAQTD employee details, except who works as ANAYST.
Q5)WAQTD employee details, except whoes mgr number is 7698.
Q6)WAQTD employee details, if employee working as manager.
Q7)WAQTD employee details, if employee earning 3000 or more than 3000.

Logical Operator:
----------------
AND: 
-If all the conditions are true, it returns true(select the records) else false(reject the records)

Q1)WAQTD employee name, sal and deptno, if employee earning more than 2000 and works in deptno 10.
Q2)WAQTD employee details, if employee number is 7902 and also works as SALESMAN.
Q3)WAQTD employee details, if employee mgr number is 7839 and also comm is more than 300.
Q4)WAQTD employee details, if employee hired on 03-DEC-81 and works in deptno 10.
Q5)WAQTD employee details, if employee working as ANAYST in deptno 20.
Q6)WAQTD employee details, if employee earn more than 1000 but less than 3000.

OR: 
-If any of the condition is true, it returns true.

Q1)WAQTD employee details, if employee works in deptno 10 or 20 or 30 or 40.
Q2)WAQTD employee name, sal and job works as SALESMAN or MANAGER.
Q3)WAQTD employee name,sal,mgr,deptno and job, if employee name is SMITH or MILLER.
Q4)WAQTD employee number,name and job, if employee num ber is 7566 or 7902.
Q5)WAQTD employee name, if employee mgr is 7839 or 7639.

Combination of (AND,OR)
Q1)WAQTD employee name, sal, deptno and job works as ANAYST and also in deptno 10 or 20.	 
Q2)WAQTD employee name, sal, deptno and job, if employee earning more than 3000 as clerk or salesman or manager.	 
Q3)WAQTD employee name, sal and job works as analys or president on deptno 10 or 20 and also employee mgr number is 7839.	 
Q4)WAQTD employee details, if employee earn less than 3000 but works in deptno 20 or 30 and also except who works as MANAGER or PRESIDENT.

NOT:
-Used to give the opposite values.
Syntax: not column-name='VALUE';

Q1)WAQTD employee details, except employee who works in deptno 20.
Q2)WAQTD employee details, except employee who works as clerk also except salesman.
Q3)WAQTD employee name and salary, except who are earning more than 3000.

Combination(AND,OR,NOT):
Q1)WAQTD employee name,sal and deptno, if employee earning more than 2000 but less than 4000 and working as clerk or salesman except whoes deptno is 20.
Q2)WAQTD employee name,sal,job and deptno, if employee work in deptno 10 or 20, as clerk or manager except smith and allen.
Q3)WAQTD employee details, if employee earn more than 3000 and also works as president in deptno 10 or 20, except martin and miller.

Date :
When we deal with dates we have to follow this-
1)on =
2)before <
3)after >
4)from >=

Q1)WAQTD employee details, if employee hired on '23-JAN-82'.
Q2)WAQTD employee details, if employee hired after '03-DEC-81'.
Q3)WAQTD employee details, if employee hired after year 81.
Q4)WAQTD employee details, if employee hired after year 83 and works in deptno 10 or 20.
Q5)WAQTD employee details, if employee hired before year '10-JAN-81'.
Q6)WAQTD employee details, if employee hired before year 85 and works as clerk or manager in deptno 10 or 20.
Q7)WAQTD employee details, if employee hired after year 81 but hired before year 85.
Q8)WAQTD employee details, if employee hired from 81 and except salesman.

Special Operator:
-----------------
IS:
-Used to evalute null values inside the specific column.
syntax: column-name is null;

Q1)WAQTD employee details, if employee dont have any reporting manager.
Q2)WAQTD employee name,sal and comm, if employee not earning any commission.
Q3)WAQTD employee details, who are not working in any dept.
Q4)WAQTD employee details, except employee who work as clerk also except salesman and employee's dont earn any commission.

IS NOT:
-Used to evalute not null values.
Syntax: column-name is not null;

Q1)WAQTD employee details who are earning some salary in deptno 10.
Q2)WAQTD employee details who have reporting manager.
Q3)WAQTD employee details, who are earning some commission.

IN:
-Used to evalute multiple values in specified column.
-It selects the data or values given in RHS.
Syntax: column-name in (value1,value2...);

Q1)WAQTD employee details, if employee works in dept 10 or 20.
Q2)WAQTD employee name and sal, if employee name is SMITH or ALLEN or MARTIN.
Q3)WAQTD employee details, if employee earning more than 2000 but less than 5000, as analyst or manager in deptno 20 or 30 and also hired after year 81.
Q4)WAQTD employee name and deptno, if employee is working in dept 10 or 20 or 30 or 40 or 50.

NOT IN: Used to evalute multiple values in a specific column.
-It rejects the values given in RHS and selects all the other values in specified column.
-In LHS pass 1 argument, RHS we can pass one or more values.
Syntax: column-name not in (value1,value2.....);

Q1)WAQTD employee details, except who works in deptno 10 and 20.
Q2)WAQTD employee details, except clerk,manager,analyst and salesman.
Q3)WAQTD employee name,sal,deptno and job,except clerk and salesman, also except who works in deptno 10 and 30.
Q4)WAQTD employee details, who are not earning any commission but works in some department as clerk or salesman, except employee's who works in deptno 20 and 30.

BETWEEN:
-Used for range purpose.
Syntax: column-name between value1 and value2;

value1 and value2 are given ranges.
(value1 is lower range, value2 is higher range)

Q1)WAQTD employee name nad sal, if employee earning 1000 to 3000.
Q2)WAQTD employee name and hiredate, if employee hiredate from year 81 to year 85.
Q3)WAQTD employee name and  hiredate, if employee hired from year 80 to year 81 or from year 85 to year 87.

NOT BETWEEN:
-Opposite to between operator.
Syntax: column-name not between value1 and value2;

Q1)WAQTD employee name and sal, except who are earning from 1000 to 3000.
Q2)WAQTD employee name and hiredate, except who are hired from year 81 to year 85.